{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","get","req","res","find","err","foodtrucks","send","json","findById","params","id","foodtruck","post","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","lat","long","save","message","delete","status","remove","_id","review","put","newReview","title","text","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport FoodTruck from '../model/foodtruck';\nimport Review from '../model/review';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // '/v1/foodtruck' - GET all food trucks\n  api.get('/', (req, res) => {\n    FoodTruck.find({}, (err, foodtrucks) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtrucks);\n    });\n  });\n\n  // '/v1/foodtruck/:id' - GET a specific food truck\n  api.get('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtruck);\n    });\n  });\n\n  // '/v1/foodtruck/add' - POST - add a food truck\n  api.post('/add', authenticate, (req, res) => {\n    let newFoodTruck = new FoodTruck();\n    newFoodTruck.name = req.body.name;\n    newFoodTruck.foodtype = req.body.foodtype;\n    newFoodTruck.avgcost = req.body.avgcost;\n    newFoodTruck.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n    newFoodTruck.geometry.coordinates.long = req.body.geometry.coordinates.long;\n\n    newFoodTruck.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'Food Truck saved successfully' });\n    });\n  });\n\n  // '/v1/foodtruck/:id' - DELETE - remove a food truck\n  api.delete('/:id', authenticate, (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.status(500).send(err);\n        return;\n      }\n      if (foodtruck === null) {\n        res.status(404).send(\"FoodTruck not found...\");\n        return;\n      }\n      FoodTruck.remove({\n        _id: req.params.id\n      }, (err, foodtruck) => {\n        if (err) {\n          res.status(500).send(err);\n          return;\n        }\n        Review.remove({\n          foodtruck: req.params.id\n        }, (err, review) => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({message: \"Food Truck and Reviews Successfully Removed...\"});\n        });\n      });\n    });\n  });\n\n  // '/v1/foodtruck/:id' - PUT - update an existing record\n  api.put('/:id', authenticate, (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      foodtruck.name = req.body.name;\n      foodtruck.foodtype = req.body.foodtype;\n      foodtruck.avgcost = req.body.avgcost;\n      newFoodTruck.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n      newFoodTruck.geometry.coordinates.long = req.body.geometry.coordinates.long;\n      foodtruck.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: 'Food Truck info updated...' });\n      });\n    });\n  });\n\n  // add a review by a specific foodtruck id\n  // '/v1/foodtruck/reviews/add/:id'\n  api.post('/reviews/add/:id', authenticate, (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      let newReview = new Review();\n\n      newReview.title = req.body.title;\n      newReview.text = req.body.text;\n      newReview.foodtruck = foodtruck._id;\n      newReview.save((err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        foodtruck.reviews.push(newReview);\n        foodtruck.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: 'Food truck review saved...' });\n        });\n      });\n    });\n  });\n\n  // get reviews for a specific foodtruck id\n  // '/v1/foodtruck/reviews/:id'\n  api.get('/reviews/:id', (req, res) => {\n    Review.find({foodtruck: req.params.id}, (err, reviews) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(reviews);\n    });\n  });\n\n  return api;\n}\n"]}